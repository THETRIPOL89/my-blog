---
import Layout from '../layouts/BlogPost.astro';
---

<Layout
  title="About Me"
  description="The story of my life"
  pubDate={new Date('April 13 2023')}
  updatedDate={new Date('May 06 2023')}
>
  <p>
    Here we are. I'm writing about me, and you're reading about me. I want to tell you something
    that you need to remember btw when reading my blogs: it's not about me, it's about you...
    And with that, I mean you should implement the tools that I, either implicitly or explicitly,
    give you. Certainly, I'll be writing about myself, some parts of the books that I read, and
    other things, but the main reason for this blog is to let you learn more. This is my idea
    and I hope you'll enjoy reading the posts and I hope you'll agree with this preface.
  </p>
  <p>
    First of all, let me tell you my identity. My name is Federico and I'm a 16 yo young student.
    I'm currently studying in High-School of Languages in the 3rd year. I actually enjoy it, but I
    prefer learning Computer Science. In the last five years, I've learned a lot more about CS
    and I've discovered that I'm really keen on this subject. Now I'll tell you about the story of
    my learning adventure, going through all the highs and lows, the useful and useless stuff.
    Feel free to skip this part if you're not interested.
  </p>
  <p>
    It all started because of jealousy. A friend of mine pretended to be a computer genius in
    middle school. At the time I believed what he said was true. So I decided to study Computer
    Programming to be like him. It's fun now thinking that he was capping and I got passionate
    thanks to lies and jealousy. A very strange start. However, I began to study Computers.
    I downloaded a book, don't remember the name, but it was an easy-peasy book about Computers's History,
    Computers's Components, and an introduction to Programming. I literally discovered a world.
    I remained stunned by the potentiality of this subject. So I started learning. Now, you probably
    may be wondering about what programming language I learned first: this will make you laugh.
    I started programming with Batch. If you don't know what Batch is, it's normal; otherwise, it's not.
    Simply, Batch is the programming language of Windows Terminal. I think that's actually a good
    programming language to start with btw. I mean, a lot of static programming structures are
    present in Batch, so it's fine. But obviously, Python is much more intuitive and faster than Batch.
    But I wasn't taught about that. So, every day I learned something new, and I applied it to some projects.
  </p>
  <p>
    I want to spend a few words learning programming. Take this as a parenthesis and feel free to skip it.
    When I first started, I just found it normal to watch the code in the video, and then copy it
    into my code. But this has lasted for a very short period. After I had learned the basics,
    I started building my projects. Here's the main point I'm trying to convey when learning programming language:<br>
    - DO NOT copy and paste the code<br>
    - DO read the code and apply it to a project of yours<br>
    That's all I wanted to say. Closed parenthesis.
  </p>
  <p>
    I think I spent two years learning and creating stupid terminal-based programs. However, I have learned a lot
    thanks to this programming language. I don't regret learning Batch, but if you can choose, just choose Python
    to start with. It's much similar to English and therefore it's also easier. The first project I ever created
    has been a sort of bank management program. It was actually fake, in the sense that it didn't interact with a real
    bank database. That was really fun btw. I really recommend you try real-life projects even if you're not really
    practiced with the programming language you're learning.
  </p>
  <p>
    Later on, I started learning new programming languages like Python and C#. I really like C#, because I enjoy creating
    desktop applications and I think C# is the best one for this. I mean, I really learned well Batch and then I have just
    skimmed all the other programming languages. It's absolutely true that the more programming languages you learn, the easier
    it is to learn new ones. Even today I can learn a new programming language in less than a week I think, but I wouldn't do
    it, 'cause with Python you can do almost everything: <b>just learn Python</b>. It's fun that I've created a website
    in three days without knowing anything about languages for the web (like HTML, CSS, Js, or any freaking framework of Js).
    That's the power of an experienced mind regarding programming languages. My advice is simply to just learn a programming language,
    but learn it deeply and understand the main topics like Variables, Functions, OOP, etc.
  </p>
  <p>
    After "mastering" Python (I haven't actually learned Python completely yet, but I'm able to learn stuff quickly and easily),
    I've started studying C++. That's not easy. I tried learning it when I was not as experienced as today and so I couldn't
    take advantage of all the incredible things of C++. I really suggest you learn some concepts behind C++ language after
    learning Python. The thing was that the things I could do with C++ were the same as I could do with Python. So I stopped using C++.
    I don't think it was a waste of time but now I can say that C++ isn't the great programming language that everybody says.
    However, it's still used and required when looking for a lot of jobs.
  </p>
  <p>
    I then started learning C# for Desktop Application development. I was now bored of creating always useless command-based programs
    and so I decided to change. That's when I started learning C# WPF. I still think today that C# is one of the best programming languages
    you should implement. You can build games with Unity, desktop applications with Visual Studio, and a lot of other things. I suggest you learn
    C# after learning Python if you want to scale up as a software developer. But remember: it's better to know a simple programming
    language completely rather than knowing many different programming languages but googling also the simple stuff every time
    you try to create sth. Remember: <b>Less is more</b>.
  </p>
  <p>
    Okay, whoof. That was a lot of stuff. Now, if you reached here it means you're actually interested in my history.
    I suggest you keep reading the last paragraphs so you can know what I've been doing for the last few months.
    <br>Okay, CATS.
  </p>
  <img src="https://2.bp.blogspot.com/-64tMsVXz0gE/VlX7hwEesKI/AAAAAAABhC0/tyCjZrNL6e4/s1600/funny-cat-gifs-182-02.gif" style="display: block; margin: 0 auto;">
  <p>
    So I left off telling you about my favorite programming language. (Yeah, C# is probably the language I use the most).
    After a playlist on youtube, to learn the basics of C# I decided to start making my own application for Windows.
    At that point, I downloaded and installed Visual Studio. I think it was VS 2019, but nowadays I use the 2022 version.
    There was only a problem, and it was that I wasn't able to make a good design of the apps I made.
    Therefore I decided to take part in a Figma course on Udemy.
    (There's a telegram channel, in which you can find coupons to get paid Udemy courses for free; ergo:
    I don't spend money on courses). Figma is actually a pretty good app to create UI designs,
    I advise you to try it. After I had learned a bit of UI design with Figma, I was ready.
    Later on, I've made a lot of useful and useless applications, basically for three months.
    We're now in 2023. (I've almost finished, I promise).
  </p>
  <p>
    Over the last period, I've just been making web pages with HTML, CSS, and Js.
    I don't actually know them but I like building websites so I, just, do it.
    That's the power of making your own project. If you have an idea, and you know a little bit about how to do it,
    just start accomplishing it. That's the main point you have to take out from this post.
    Just build your own projects while learning programming languages (obv if your goal is to learn programming languages).
     And that's basically all I had to say about my journey into the computer world.
     I want to finish spending a few words about the books that I read or I'm reading.
  </p>
  <p>
    Lately, I've been reading "Tools of Titans" by Tim Ferris. It's fine. I don't actually think it's a must-read book, but it contains a lot of various tips and strategies that I may (should) apply to my life. In the past, I read "The Almanack of Naval Ravikant" and that's the best book I've ever read.
I could finish it in a week while reading a 150-pages book usually takes me approximately 2 weeks. I really think of that as a must-read book. It doesn't convey lots of messages, only a few. However, those ones are really profound and real. Obv they're not world-changing or have a wow effect, but there's some idea, like the lever, that lets you entirely comprehend how exponential money growth works. There's also a part regarding health and philosophy, apart from the wealthy-relating part. Another book I suggest to you is "Soft Skills" if you're interested in an IT career. It's a bit too "simple", in the sense that it doesn't (sometimes) help you understand completely an argument. However, I would still read it 'cause it's a good introduction to some important aspects of money. And finally, I've read "How to Talk to Anyone" on Shortform (this is not a sponsor). I'll tell you: Shortform is really great. Indeed you find all the information that is present in the book, summarized but still detailed in a one-page summary. I love it. And I love "How to talk to anyone". I understood, just looking at the cover, it was a fantastic book. It explains a lot about interactions with acquaintances and strangers. If I had to suggest only one book about this field (relationships), I think it would be this one.
  </p>
</Layout>
